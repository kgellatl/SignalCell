% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_var_genes.R
\name{calc_var_genes}
\alias{calc_var_genes}
\title{Subset Genes}
\usage{
calc_var_genes(
  input,
  method,
  assay = NULL,
  threshold = 1,
  minCells = 10,
  nComp = 10,
  log = F,
  fudge = F,
  fudge_val = 0.01
)
}
\arguments{
\item{input}{the input sce}

\item{method}{can either be "CV", "Malhanobis", or "Gini"}

\item{assay}{if NULL will default to def_assay. Can provide a character assay argument.}

\item{threshold}{UMI threshold for gene detection}

\item{minCells}{number of cells expressed above threshold for a given gene}

\item{nComp}{if method = PCA, the number of components to keep}

\item{log}{whether or not to log scale the data}

\item{fudge}{whether or not to add a fudge factor to the entire matrix}

\item{fudge_val}{the value to add to matrix before transformation}
}
\description{
This will select genes based on minimum expression, coefficient of variation,
or by a preliminary PCA.
}
\details{
Genes will be first filtered by minimum expression selecting by subsetting to genes that are
expressed above the threshold in more than minCells.
If the method is CV, it will first subset the genes based on the expression cutoffs,
then find the coefficient of variation across all genes.
Next it will select the percentile of genes (cutoff) based on their coefficient of variation.
The last method will perform PCA on the cells, and then look at the loadings of each gene.
By finding genes that are off center (via malhanoobis distance) we can filter to include only genes that contribute significant variance to the data.
}
\examples{
gene_subset <- subset_genes(input = sce, method = "PCA", assay = "counts")
}
